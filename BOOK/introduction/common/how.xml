<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-intro-how">
  <?dbhtml filename="how.html"?>

  <title>How to Build a CLFS System</title>

  <para>The CLFS system will be built by using a previously installed
  Linux distribution (such as Debian, Fedora, Mandriva, SUSE, or Ubuntu).
  This existing Linux system (the host) will be used as a starting point to
  provide necessary programs, including a compiler, linker, and shell,
  to build the new system. Select the <quote>development</quote> option
  during the distribution installation to be able to access these
  tools.</para>

  <para>As an alternative to installing an entire separate distribution
  onto your machine, you may wish to use the Linux From Scratch LiveCD.
  This CD works well as a host system, providing all the tools you need to
  successfully follow the instructions in this book. It does also
  contain source packages and patches for the LFS book, and a copy of the LFS
  book, but not the needed packages or book for CLFS. You can still use the
  CD for building CLFS, but you will need to download the packages, patches
  and book separately. You can also look at
  <ulink url="&hints-root;lfscd-remastering-howto.txt"/>
  for infomation on building your own CD, replacing the LFS packages and book
  with those for CLFS. Once you have the CD, no network connection or
  additional downloads are necessary. For more information about the LFS
  LiveCD or to download a copy, visit <ulink url="&livecd-root;"/>.</para>

  <para><xref linkend="chapter-getting-materials"/> of this book describes how
  to create a temporary build directory and which packages and patches need to
  be downloaded to build a CLFS system.
  <xref linkend="chapter-final-preps"/> discusses the setup for an appropriate
  working environment. Please read <xref linkend="chapter-final-preps"/>
  carefully as it explains several important issues the developer should be
  aware of before beginning to work through <xref
    linkend="chapter-cross-tools"/> and beyond.</para>

  <para><xref linkend="chapter-cross-tools"/> explains the installation of
  cross-compile tools which will be built on the host but be able to compile
  programs that run on the target machine. These cross-compile tools will
  be used to create the final-system.</para>

  <para>The process of building cross-compile tools first involves installing
  binutils into ${CLFS}/cross-tools, so that we have an asembler and a linker
  for our target architecture. GCC is then compiled statically and installed
  into ${CLFS}/cross-tools, this cross-compiler is used to build glibc for the
  final-system. The GCC cross-compiler is then rebuilt dynamically - this final
  cross-compiler is what will be used to build the final-system.</para>

  <para>In <xref linkend="chapter-building-system"/>, the full CLFS system is
  cross-compiled. The system is built using a sysroot compiler. Sysroot is a
  parameter passed to binutils and gcc that modifies its default search paths.
  </para>

  <para>To finish the installation, the CLFS-Bootscripts are set up in <xref
  linkend="chapter-bootscripts"/>, and the kernel and boot loader are set
  up in <xref linkend="chapter-bootable"/>. <xref linkend="chapter-finalizing"/>
  contains information on furthering the CLFS experience beyond this book.
  After the steps in this book have been implemented, the computer will be
  ready to reboot into the new CLFS system.</para>

  <para>This is the process in a nutshell. Detailed information on each
  step is discussed in the following chapters and package descriptions.
  Items that may seem complicated will be clarified, and everything will
  fall into place as the reader embarks on the CLFS adventure.</para>

</sect1>
