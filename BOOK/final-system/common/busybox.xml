<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-busybox" role="wrap">
  <?dbhtml filename="busybox.html"?>

  <title>Busybox-&busybox-version;</title>

  <indexterm zone="ch-system-busybox">
    <primary sortas="a-Busybox">Busybox</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>BusyBox combines tiny versions of many common UNIX utilities into a single small
     executable. It provides replacements for most of the utilities you usually find in GNU
     fileutils, shellutils, etc. The utilities in BusyBox generally have fewer options than
     their full-featured GNU cousins; however, the options that are included provide the
     expected functionality and behave very much like their GNU counterparts. BusyBox provides
     a fairly complete environment for any small or embedded system.</para>

  </sect2>

  <sect2 role="installation">
    <title>Installation of Busybox</title>

    <para os="p1">The following patch contains a number of fixes to version
    &busybox-version; by the Busybox developers:</para>

<screen os="p2"><userinput>patch -Np1 -i ../&busybox-fixes-patch;</userinput></screen>

    <para os="a">The following patch contains a default configuration for busybox:</para>

<screen os="b"><userinput>patch -Np1 -i ../&busybox-config-patch;
cp -v clfs/config .config</userinput></screen>

    <note os="c">
      <para>Currently we are just telling Busybox to use a generic
      configuration. For those for more adventureous, you can use
      <command>make menuconfig</command>, and create a custom or modified
      configuration for your build.</para>
    </note>

    <para os="d">The following tells BusyBox to validate the configuration,
    and makes sure all required options are defined:</para>

<screen os="e"><userinput>make oldconfig</userinput></screen>

    <para os="f">Compile the package:</para>

<screen os="g"><userinput>make CROSS_COMPILE="${CLFS_TARGET}-"</userinput></screen>

    <para os="h">Install the package:</para>

<screen os="i"><userinput>make CROSS_COMPILE="${CLFS_TARGET}-" \
  CONFIG_PREFIX="${CLFS}" install</userinput></screen>

    <para os="j">If your going to build your kernel with modules, you will need to make
    sure <command>depmod.pl</command> is available:</para>

<screen os="k"><userinput>cp examples/depmod.pl ${CLFS}/cross-tools/bin
chmod 755 ${CLFS}/cross-tools/bin/depmod.pl</userinput></screen>

  </sect2>

  <sect2 id="contents-busybox" role="content">
    <title>Contents of Busybox</title>

    <segmentedlist>
      <segtitle>Installed programs</segtitle>

      <seglistitem>
        <seg>To be Written</seg>
      </seglistitem>
    </segmentedlist>

<!--
    <variablelist>
      <bridgehead renderas="sect3">Short Descriptions</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="bash">
        <term><command>bash</command></term>
        <listitem>
          <para>A widely-used command interpreter; it performs many types of
          expansions and substitutions on a given command line before executing
          it, thus making this interpreter a powerful tool</para>
          <indexterm zone="ch-system-bash bash">
            <primary sortas="b-bash">bash</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="bashbug">
        <term><command>bashbug</command></term>
        <listitem>
          <para>A shell script to help the user compose and mail standard
          formatted bug reports concerning <command>bash</command></para>
          <indexterm zone="ch-system-bash bashbug">
            <primary sortas="b-bashbug">bashbug</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="sh">
        <term><command>sh</command></term>
        <listitem>
          <para>A symlink to the <command>bash</command> program; when invoked
          as <command>sh</command>, <command>bash</command> tries to mimic the
          startup behavior of historical versions of <command>sh</command> as
          closely as possible, while conforming to the POSIX standard as
          well</para>
          <indexterm zone="ch-system-bash sh">
            <primary sortas="b-sh">sh</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>
-->
  </sect2>

</sect1>
